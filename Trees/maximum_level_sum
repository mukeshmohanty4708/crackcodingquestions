/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxLevelSum(TreeNode root) {
        if(root == null) return 0;
        
        int qSize, level = 1, res = 1;
        long sum = 0, max = Integer.MIN_VALUE;
        
        Queue<TreeNode> que = new LinkedList<TreeNode>();
        que.offer(root);
        
        while(!que.isEmpty()){
            qSize = que.size();
            sum = 0;
            while(qSize > 0){
                TreeNode tmp = que.remove();
                sum += tmp.val;
                
                if(tmp.left != null) que.add(tmp.left);
                if(tmp.right != null) que.add(tmp.right);

                qSize--;
            }
            System.out.println(sum + " " + level);
            
            if(max < sum){
                max = sum;
                res = level;
            } 
            level++;
        }
        
        return res;
    }
}
