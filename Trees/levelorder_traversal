
ALSO known as Breadth First Search.......

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> arrlist = new ArrayList<>();
        Queue<TreeNode> que = new LinkedList<TreeNode>();
        int qSize;
        
        if(root == null) return arrlist;
        que.offer(root);
        while(!que.isEmpty()){
            qSize = que.size();
            ArrayList<Integer> nlist = new ArrayList();
            while(qSize > 0){
                TreeNode tmp = que.remove();
                if(tmp.left != null) que.offer(tmp.left);
                if(tmp.right != null) que.offer(tmp.right);
                nlist.add(tmp.val);
                qSize--;
            }
            arrlist.add(nlist);
        }
        
        return arrlist;
    }
}
